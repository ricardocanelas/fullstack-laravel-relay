{"version":3,"sources":["contexts/__generated__/authContextQuery.graphql.js","contexts/__generated__/authContextLoginMutation.graphql.js","contexts/__generated__/authContextLogoutMutation.graphql.js","pages/__generated__/UsersPageQuery.graphql.js","pages/IndexPage.js","contexts/authContext.js","pages/LoginPage.js","pages/UsersPage.js","components/PrivateRoute.js","App.js","environmentModern.js","index.js"],"names":["node","v0","hash","module","exports","v1","IndexPage","to","AuthContext","React","createContext","ME_QUERY","LOGIN_MUTATION","LOGOUT_MUTATION","useAuth","context","useContext","undefined","Error","LoginPage","props","useState","email","password","state","setState","user","login","loginProps","loading","error","handleChange","field","e","target","value","console","log","source","errors","message","JSON","stringify","location","from","className","pathname","onSubmit","preventDefault","onChange","disabled","type","USERS_QUERY","UsersPage","useQuery","query","variables","first","users","edges","map","item","key","id","name","PrivateRoute","Component","component","rest","render","Header","logout","onClick","App","path","exact","LoadingApp","firstAttemptFinished","endpoint","injectAuthorization","token","Cookie","get","Authorization","environment","Environment","network","Network","create","RelayNetworkLogger","wrapFetch","operation","fetch","method","headers","Accept","body","text","then","response","json","store","Store","RecordSource","ReactDOM","environmentModern","setFirstAttemptFinished","setUser","meData","useMutation","onCompleted","set","access_token","expires","onError","loginMutation","logoutMutation","useCallback","remove","data","username","useLayoutEffect","me","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.bd48ce35.chunk.js","sourcesContent":["/**\n * @flow\n * @relayHash 1334a208d2dadc0deac87b75ad90f09f\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type authContextQueryVariables = {||};\nexport type authContextQueryResponse = {|\n  +me: ?{|\n    +id: string,\n    +email: string,\n  |}\n|};\nexport type authContextQuery = {|\n  variables: authContextQueryVariables,\n  response: authContextQueryResponse,\n|};\n*/\n\n\n/*\nquery authContextQuery {\n  me {\n    id\n    email\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"me\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"User\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n      },\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"email\",\n        \"args\": null,\n        \"storageKey\": null\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"authContextQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"authContextQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"authContextQuery\",\n    \"id\": null,\n    \"text\": \"query authContextQuery {\\n  me {\\n    id\\n    email\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'ed310b0b78945816295626ccf7d1565b';\nmodule.exports = node;\n","/**\n * @flow\n * @relayHash 8804b26eb3914da11e90d5d0eabb63fa\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type LoginInput = {|\n  username: string,\n  password: string,\n|};\nexport type authContextLoginMutationVariables = {|\n  data?: ?LoginInput\n|};\nexport type authContextLoginMutationResponse = {|\n  +login: {|\n    +access_token: string,\n    +user: {|\n      +id: string,\n      +email: string,\n    |},\n  |}\n|};\nexport type authContextLoginMutation = {|\n  variables: authContextLoginMutationVariables,\n  response: authContextLoginMutationResponse,\n|};\n*/\n\n\n/*\nmutation authContextLoginMutation(\n  $data: LoginInput\n) {\n  login(data: $data) {\n    access_token\n    user {\n      id\n      email\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"data\",\n    \"type\": \"LoginInput\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"login\",\n    \"storageKey\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"data\",\n        \"variableName\": \"data\"\n      }\n    ],\n    \"concreteType\": \"AuthPayload\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"access_token\",\n        \"args\": null,\n        \"storageKey\": null\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"user\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"id\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"email\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"authContextLoginMutation\",\n    \"type\": \"Mutation\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"authContextLoginMutation\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"mutation\",\n    \"name\": \"authContextLoginMutation\",\n    \"id\": null,\n    \"text\": \"mutation authContextLoginMutation(\\n  $data: LoginInput\\n) {\\n  login(data: $data) {\\n    access_token\\n    user {\\n      id\\n      email\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '0dde6ec78ec603fb01848cd465e18541';\nmodule.exports = node;\n","/**\n * @flow\n * @relayHash 277234db9ce6df0380154ebe0771da1b\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type authContextLogoutMutationVariables = {||};\nexport type authContextLogoutMutationResponse = {|\n  +logout: {|\n    +message: ?string\n  |}\n|};\nexport type authContextLogoutMutation = {|\n  variables: authContextLogoutMutationVariables,\n  response: authContextLogoutMutationResponse,\n|};\n*/\n\n\n/*\nmutation authContextLogoutMutation {\n  logout {\n    message\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"logout\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"LogoutResponse\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"message\",\n        \"args\": null,\n        \"storageKey\": null\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"authContextLogoutMutation\",\n    \"type\": \"Mutation\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"authContextLogoutMutation\",\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"mutation\",\n    \"name\": \"authContextLogoutMutation\",\n    \"id\": null,\n    \"text\": \"mutation authContextLogoutMutation {\\n  logout {\\n    message\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'b6e1eeddfa78acdd20e2f34d842e80df';\nmodule.exports = node;\n","/**\n * @flow\n * @relayHash f33526a809b30aaee4ad8da6216ee8d7\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type UsersPageQueryVariables = {|\n  first: number\n|};\nexport type UsersPageQueryResponse = {|\n  +users: ?{|\n    +edges: ?$ReadOnlyArray<?{|\n      +node: ?{|\n        +id: string,\n        +name: string,\n        +email: string,\n      |},\n      +cursor: string,\n    |}>\n  |}\n|};\nexport type UsersPageQuery = {|\n  variables: UsersPageQueryVariables,\n  response: UsersPageQueryResponse,\n|};\n*/\n\n\n/*\nquery UsersPageQuery(\n  $first: Int!\n) {\n  users(first: $first) {\n    edges {\n      node {\n        id\n        name\n        email\n      }\n      cursor\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"first\",\n    \"type\": \"Int!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"users\",\n    \"storageKey\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"first\",\n        \"variableName\": \"first\"\n      }\n    ],\n    \"concreteType\": \"UserConnection\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"edges\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"UserEdge\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"node\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"id\",\n                \"args\": null,\n                \"storageKey\": null\n              },\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"name\",\n                \"args\": null,\n                \"storageKey\": null\n              },\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"email\",\n                \"args\": null,\n                \"storageKey\": null\n              }\n            ]\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"cursor\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"UsersPageQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"UsersPageQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"UsersPageQuery\",\n    \"id\": null,\n    \"text\": \"query UsersPageQuery(\\n  $first: Int!\\n) {\\n  users(first: $first) {\\n    edges {\\n      node {\\n        id\\n        name\\n        email\\n      }\\n      cursor\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '76e77fe07733952a4c7c1bf208216fc1';\nmodule.exports = node;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst IndexPage = () => {\n  return (\n    <div>\n      <h1>Index</h1>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n        labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\n        laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in\n        voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n      </p>\n      <p>\n        Click here to <Link to=\"/users\">check all users</Link>{' '}\n        <small>(if you're already logged)</small>\n      </p>\n    </div>\n  )\n}\n\nexport default IndexPage\n","import React from 'react'\nimport graphql from 'babel-plugin-relay/macro'\nimport { useQuery } from 'relay-hooks'\nimport { useMutation } from 'react-relay-mutation'\nimport Cookie from 'js-cookie'\n\nconst AuthContext = React.createContext()\n\nexport const ME_QUERY = graphql`\n  query authContextQuery {\n    me {\n      id\n      email\n    }\n  }\n`\n\nexport const LOGIN_MUTATION = graphql`\n  mutation authContextLoginMutation($data: LoginInput) {\n    login(data: $data) {\n      access_token\n      user {\n        id\n        email\n      }\n    }\n  }\n`\n\nexport const LOGOUT_MUTATION = graphql`\n  mutation authContextLogoutMutation {\n    logout {\n      message\n    }\n  }\n`\n\nfunction AuthProvider(props) {\n  const [firstAttemptFinished, setFirstAttemptFinished] = React.useState(false)\n  const [user, setUser] = React.useState(null)\n\n  const { props: meData } = useQuery({\n    query: ME_QUERY,\n    variables: {},\n  })\n\n  const [loginMutation, loginProps] = useMutation(LOGIN_MUTATION, {\n    onCompleted: response => {\n      Cookie.set('token', response.login.access_token, { expires: 7 })\n      setUser(response.login.user)\n    },\n    onError: () => {},\n  })\n\n  const [logoutMutation] = useMutation(LOGOUT_MUTATION)\n\n  const logout = React.useCallback(() => {\n    logoutMutation({ variables: {} })\n    Cookie.remove('token')\n    setUser(null)\n  }, [logoutMutation])\n\n  const login = React.useCallback(\n    (email, password) => loginMutation({ variables: { data: { username: email, password } } }),\n    [loginMutation]\n  )\n\n  React.useLayoutEffect(() => {\n    if (meData) {\n      if (!firstAttemptFinished) {\n        setFirstAttemptFinished(true)\n        setUser(meData.me)\n      }\n    }\n  }, [meData, firstAttemptFinished])\n\n  return (\n    <AuthContext.Provider\n      value={{ user, login, loginProps, logout, firstAttemptFinished }}\n      {...props}\n    />\n  )\n}\n\nfunction useAuth() {\n  const context = React.useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error(`useAuth must be used within a AuthProvider`)\n  }\n  return context\n}\n\nexport { AuthProvider, useAuth }\n","import React from 'react'\nimport { useAuth } from '../contexts/authContext'\n\nconst LoginPage = props => {\n  const [state, setState] = React.useState({\n    email: 'feest.luella@example.net',\n    password: 'password1',\n  })\n  const {\n    user,\n    login,\n    loginProps: { loading, error },\n  } = useAuth()\n\n  const handleChange = field => e => {\n    setState({ ...state, [field]: e.target.value })\n  }\n\n  console.log(props)\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (!loading) {\n      login(state.email, state.password)\n    }\n  }\n\n  if (error) {\n    console.log('AAAAHHHH!!!')\n    console.log(error.source.errors[0].message)\n    console.log(typeof error)\n    console.log(JSON.stringify(error))\n  }\n\n  return (\n    <div>\n      <h1>Login</h1>\n\n      {props.location.state && props.location.state.from && (\n        <div>\n          <div className=\"alert\">\n            To access the url <span className=\"bold\">{props.location.state.from.pathname} </span>you\n            need to be log in.\n          </div>\n        </div>\n      )}\n\n      <form onSubmit={handleSubmit}>\n        {user && <div>You're already logged</div>}\n        {!user && (\n          <>\n            <label>\n              E-mail\n              <input value={state.email} onChange={handleChange('email')} disabled={loading} />\n            </label>\n            <label>\n              Password\n              <input\n                type=\"password\"\n                value={state.password}\n                onChange={handleChange('password')}\n                disabled={loading}\n              />\n            </label>\n            <button type=\"submit\" disabled={loading}>\n              Login\n            </button>\n            {error && <span className=\"message\">The user credentials were incorrect.</span>}\n            {loading && <span className=\"message\">Checking credential...</span>}\n          </>\n        )}\n      </form>\n    </div>\n  )\n}\n\nexport default LoginPage\n","import React from 'react'\nimport graphql from 'babel-plugin-relay/macro'\nimport { useQuery } from 'relay-hooks'\n\nexport const USERS_QUERY = graphql`\n  query UsersPageQuery($first: Int!) {\n    users(first: $first) {\n      edges {\n        node {\n          id\n          name\n          email\n        }\n        cursor\n      }\n    }\n  }\n`\n\nconst UsersPage = () => {\n  const { props, error } = useQuery({\n    query: USERS_QUERY,\n    variables: { first: 50 },\n  })\n\n  return (\n    <div>\n      <h1>All Users</h1>\n      {error && <div>Ops! There's an error</div>}\n      {!props && <div>Loading..</div>}\n\n      {props &&\n        props.users &&\n        props.users.edges.map(item => {\n          return (\n            <li key={item.node.id}>\n              {item.node.name} / {item.node.email}\n            </li>\n          )\n        })}\n    </div>\n  )\n}\n\nexport default UsersPage\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useAuth } from '../contexts/authContext'\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  const { user } = useAuth()\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        user ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport { Switch, Route, Link } from 'react-router-dom'\nimport IndexPage from './pages/IndexPage'\nimport LoginPage from './pages/LoginPage'\nimport UsersPage from './pages/UsersPage'\nimport { useAuth } from './contexts/authContext'\nimport PrivateRoute from './components/PrivateRoute'\n\nconst Header = () => {\n  const { user, logout } = useAuth()\n  return (\n    <div>\n      <nav>\n        {user && (\n          <>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/users\">Users</Link>\n            </li>\n            <li className=\"btn btn-link\" onClick={logout}>\n              Logout\n            </li>\n            <div className=\"pull-right\">User: {JSON.stringify(user)}</div>\n          </>\n        )}\n        {!user && (\n          <>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n          </>\n        )}\n      </nav>\n    </div>\n  )\n}\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={IndexPage} />\n        <Route path=\"/login/\" component={LoginPage} />\n        <PrivateRoute path=\"/users/\" component={UsersPage} />\n      </Switch>\n    </div>\n  )\n}\n\nconst LoadingApp = () => {\n  const { firstAttemptFinished } = useAuth()\n  if (firstAttemptFinished) return <App />\n\n  return <div>Checking authentication..</div>\n}\n\nexport default LoadingApp\n","import Cookie from 'js-cookie'\nimport { Environment, Network, RecordSource, Store } from 'relay-runtime'\nimport RelayNetworkLogger from 'relay-runtime/lib/RelayNetworkLogger'\n\nconst endpoint = 'http://localhost:8000/graphql'\n\nexport const TOKEN_KEY = 'freenance_web_token'\n\nexport function injectAuthorization() {\n  // get token from cookie or session token instead\n  const token = Cookie.get('token')\n  console.log('injectAuthorization', token)\n\n  if (token === null || token === undefined) return {}\n\n  return {\n    Authorization: `Bearer ${token}`,\n  }\n}\n\nfunction fetchQuery(operation, variables) {\n  return fetch(endpoint, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      ...injectAuthorization(),\n    },\n    body: JSON.stringify({\n      query: operation.text,\n      variables,\n    }),\n  }).then(response => {\n    return response.json()\n  })\n}\n\nconst environment = new Environment({\n  network: Network.create(RelayNetworkLogger.wrapFetch(fetchQuery, () => '')),\n  store: new Store(new RecordSource()),\n})\n\nexport default environment\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { AuthProvider } from './contexts/authContext'\nimport { RelayEnvironmentProvider } from 'relay-hooks'\nimport environmentModern from './environmentModern'\n\nReactDOM.render(\n  <RelayEnvironmentProvider environment={environmentModern}>\n    <AuthProvider>\n      <Router>\n        <App />\n      </Router>\n    </AuthProvider>\n  </RelayEnvironmentProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}